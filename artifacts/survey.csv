ID,Carimbo de data/hora,Obrigado! Você quer participar desta pesquisa?,Idade,Gênero,Maior grau acadêmico,Anos de experiência em desenvolvimento de software,Número de projetos de desenvolvimento de software que participou,"Na sua opinião, qual o seu nível de experiência com desenvolvimento de software?",Função atual na empresa:,Linguagens de programação que você é proficiente,2.1 Descreva casos onde você esteve envolvido em discussões sobre Requisitos Não Funcionais (NFRs) no desenvolvimento de software,2.2 O que leva você a participar ativamente quando encontra discussões relacionadas a RNFs em seu projeto (Selecione todos que se aplicam),2.3 Quais RNFs você normalmente discute durante o desenvolvimento de software? (Selecione todos que se aplicam),2.4 Qual é o seu nível de contribuição para a elicitação e especificação de RNFs?,"2.5 Ao lidar com problemas relacionados a RNFs, como você acessa as informações necessárias? (Selecione todos que se aplicam)","2.6 De acordo com minha experiência, Requisitos Não Funcionais (RNFs) são cruciais para o sucesso do projeto.",2.7 Em qual fase do desenvolvimento de software você observou discussões sobre NFRs? (Selecione todas que se aplicam),"2.8 Nos projetos de software dos quais você participou, haviam especialistas dedicados a tratar questões associadas a Requisitos Não Funcionais (RNFs) dentro do sistema? Se tais especialistas existiam, eles tinham um papel distinto dentro do sistema? Por favor, detalhe.",3.1 Quais estratégias você usa para garantir que os RNFs sejam considerados adequadamente durante o desenvolvimento? (Selecione todos que se aplicam),3.1.1 Explique como e quando isso acontece:,"3.2 Durante as discussões de requisitos não funcionais em sistemas de código aberto, quais desafios você enfrentou (Selecione todos que se aplicam)",4.1 Você recebeu ou deu alguma sugestão útil sobre como abordar os RNFs nos projetos em que participou? Descreva como isso aconteceu e como influenciou sua abordagem para lidar com RNFs.,,,
1,23/08/2023 18:24:23,Sim,32,Masculino,Mestrado,10,6,Alto,Engenheiro de Software,"Java, Python",As discussões geralmente se concentram em questões que impactam no desempenho e na usabilidade.,"Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Potenciais riscos de NFRs não serem abordadas","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Reuniões, Com outros colegas (mais experientes)",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Iterativamente durante o todo ciclo de vida de software",Não ,"Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Integrando a testagem de RNFs no pipeline de integração contínua",Ao longo de todo o projeto ,Nenhum,"A sugestão que dou é que os RNFs devem ser tratados com tanta prioridade quanto os demais requisitos, sempre devem ser planejados com antecedência e revisados constantemente ao longo do projeto",,,
2,24/08/2023 11:40:33,Sim,47,Masculino,Mestrado,10,20,Alto,professor,Java,"Ensino Didático, visitas técnicas, oficinas, palestras","Impacto na qualidade do software que você usa, Potenciais riscos de NFRs não serem abordadas, Oportunidade de aprendizado","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado.",Baixo,"Documentação de requisitos, Comentários do código, Reuniões",Concordo,Iterativamente durante o todo ciclo de vida de software,Não. ,Revisar e refinar as definições de RNFs no início do processo de desenvolvimento,"De acordo com o levantamento de dados, considerando o porte do projeto, requisitos e a equipe de desenvolvimento, analisa-se se os RNFs estão de acordo.","Ambiguidade em definir e articular RNFs claramente, Compreensão limitada das implicações técnicas dos RNFs","Sim, na validação inicial do projeto, um dos validadores, conforme o ambiente em que o projeto seria implementado, citou diversos possíveis problemas que poderiam ocorrer e afetar o funcionamento do software.",,,
3,24/08/2023 22:52:06,Sim,37,Masculino,Bacharel,12,12,Alto,Engenheiro de Software,Java,"Casos em que eram necessários otimização de desempenho, segurança ou redução de custos de infraestrutura ",Impacto na qualidade do software que você usa,"Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Discussões em plataformas de versionamento (por exemplo, issues e pull requests), Reuniões, Com outros colegas (mais experientes)",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de implantação, Fase de manutenção, Iterativamente durante o todo ciclo de vida de software",Todos desenvolveres eram responsáveis ,"Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Conduzir revisões de código focadas em RNFs",Constante em todas etapas de desenvolvimento,Lidando com trade-offs entre diferentes requisitos não funcionais,Nada específico ,,,
4,24/08/2023 23:25:34,Sim,32,Masculino,Mestrado,6,8,Alto,Desenvolvedor de Software,"Java, Python, C",1) Desenvolvimento de um modelo de ML de detecção de fraude onde o tempo de inferência do modelo tinha que ser menor a 0.5segundos. 2) Desenvolvimento de um modelo de ML onde a explicabilidade dos resultados do modelo tinha uma importância relevante para os usuários. ,"Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Reuniões, Com outros colegas (mais experientes), pesquisas em sites como Medium. ",Concordo,Iterativamente durante o todo ciclo de vida de software,"Não tive colegas dedicados a este tipo de requisitos. A maioria das vezes, esses requisitos foram abordados por desenvolvedores e arquitetos de software experientes. ","Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights","A maioria das vezes, os RNFs que são abordados na fase de desenvolvimento vem da especificação de requisitos. Algumas vezes, RNFs surgem durante a fase de testes ao identificar que alguma característica não foi atingida. ","Nenhum, Não tenho trabalhado com sistemas de código aberto",Uso de catálogos de RNFs e arquiteturas de referencia tipicamente dão uma luz. ,,,
5,26/08/2023 11:34:50,Sim,30,Masculino,Mestrado,5,4,Alto,Desenvolvedor de Software,"Python, JavaScript, PHP","Recentemente, nos deparamos com uma situação em que abordamos os requisitos de segurança para a comunicação de um sistema com uma rede blockchain. Nesse contexto, tivemos que assegurar desempenho, mas também a integridade e segurança na transmissão dos dados que são registrados na rede. Além disso, tivermos que garantir que permanecemos em conformidade as diretrizes da LGPD, garantindo por exemplo, o tratamento das informações sensíveis.","Alinhamento com os objetivos do projeto, Potenciais riscos de NFRs não serem abordadas","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Baixo,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Reuniões",Concordo Fortemente,Fase de desenvolvimento,"Não existiam, nós desenvolvedores tivemos que lidar com isso.",Revisar e refinar as definições de RNFs no início do processo de desenvolvimento,"durante o inicio do processo, é feita uma reunião com os desenvolvedores para ser definido os RNFs e então documentado","Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais",Não lembro,,,
6,26/08/2023 11:53:27,Sim,37,Masculino,Mestrado,20,12,Muito alto,Engenheiro de Software,"C#, JavaScript","Pensando em requisitos vinculados a desempenho, o mais interessante foi como armazenar, enriquecer, agregar e apresentar de forma dinâmica os dados de pós-negociação com um volume de pico de 1 milhão de negócios por dia e SLA de no máximo 2 segundos de latência para filtros sobre qualquer campo do negócio.",Impacto na qualidade do software que você usa,"Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Muito alto,"Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Discussões em plataformas de versionamento (por exemplo, issues e pull requests), Reuniões",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de implantação, Fase de manutenção, Iterativamente durante o todo ciclo de vida de software",Sim e não. Na empresa em que trabalho os desenvolvedores não são alocados segundo especialidade (apesar de cada um naturalmente ter a sua). Os problemas são publicados para todos e cada qual escolhe se consegue / pode contribuir.,"Conduzir revisões de código focadas em RNFs, Empregar ferramentas ou frameworks específicos para avaliação de RNFs, Integrando a testagem de RNFs no pipeline de integração contínua","Cada PR é revisado e naturalmente durante a revisão pontos de melhoria (no meu caso, em especial falando de desempenho) são discutidos. Os testes de desempenho para evitar regressão acontecem ao fim do dia sobre a última versão da branch 'nightly'. Ocasionamente os testes precisam ser alterados para cobrir problemas encontrados em produção.","Ferramentas ou frameworks insuficientes para testar e verificar aspectos não funcionais, Lidando com trade-offs entre diferentes requisitos não funcionais",Documentos de requisitos servem para muito pouca coisa e normalmente mais atrapalham do que ajudam pois refletem a realidade do momento em que foram escritos e o custo de manutenção deles é alto sobre o retorno,,,
7,26/08/2023 13:35:56,Sim,31,Masculino,Especialização/MBA,4,2,Baixo,Gerência de Projeto,C,Sistemas de Inventário de uma indústria,Potenciais riscos de NFRs não serem abordadas,"Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,Documentação de requisitos,Concordo Fortemente,"Fase inicial (por exemplo, a fase de design)",Sim,"Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights",Reuniões de levantamento de requisitos com o dono do processo de negócio,"Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais, Ferramentas ou frameworks insuficientes para testar e verificar aspectos não funcionais, Lidando com trade-offs entre diferentes requisitos não funcionais",Abordagem colaborativa com todas as partes interessadas do projeto,,,
8,26/08/2023 15:38:29,Sim,35,Masculino,Bacharel,16,100,Muito alto,Gerência de Projeto,"C#, C++",Os sistemas que desenvolvemos precisam lidar com uma volumetria muito expressiva e latência baixa. Então em quase todo projeto temos que lidar com requisitos não funcionais ,"Relevância para sua área de expertise, Alinhamento com os objetivos do projeto, Potenciais riscos de NFRs não serem abordadas","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Muito alto,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Discussões em plataformas de versionamento (por exemplo, issues e pull requests), Reuniões, E-mail",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de implantação, Fase de manutenção, Iterativamente durante o todo ciclo de vida de software","Em geral não há 1 pessoa especificamente voltada a nfr porque incentivamos que todos olhem NFR como um aspecto Cross, presente em todas as atividades e funcionalidades implementadas. Todos devem dominar o tema e não terceirizsr para um ""especialista""","Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Conduzir revisões de código focadas em RNFs, Empregar ferramentas ou frameworks específicos para avaliação de RNFs",-,"Nenhum, -","Citando exemplos, sendo detalhista e concreto, mostrando o caminho das pedras, mostrando que é talvez o aspecto mais interessante para nós desenvolvedores (é onde as coisas ficam complexas e desafiadoras, ninguém gosta de ficar implementando crud boçal)",,,
9,26/08/2023 15:53:50,Sim,22,Masculino,Bacharel,2,2,Alto,Engenheiro de Software,"Java, C#",Desenvolvimento de provas de conceito,Oportunidade de aprendizado,"Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Baixo,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Discussões em plataformas de versionamento (por exemplo, issues e pull requests), Reuniões, Com outros colegas (mais experientes)",Concordo,Iterativamente durante o todo ciclo de vida de software,Em um sim e no outro não. No mais recente há uma equipe que faz a entrega dos requisitos e documentações mas não implementa-a,"Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Empregar ferramentas ou frameworks específicos para avaliação de RNFs",São coletadas as métricas com as ferramentas para avaliar no final dos ciclos da sprint e ao desenvolver novos projetos há reuniões para discussão dos requisitos,"Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais, Lidando com trade-offs entre diferentes requisitos não funcionais, Compreensão limitada das implicações técnicas dos RNFs",Não,,,
10,26/08/2023 16:21:57,Sim,38,Masculino,Ensino Médio,20,30,Alto,Desenvolvedor de Software,"Java, C, C#, C++, JavaScript, VB6, VB.Net, ASP, SQL, Swift","Escalabilidad del sistema, casos de uso, diagramas de flujo, DER, documentaciones varias, seguridad, etc.","Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Potenciais riscos de NFRs não serem abordadas, Profesionalidad","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Comentários do código, Discussões em plataformas de versionamento (por exemplo, issues e pull requests), Reuniões, E-mail",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de implantação, Fase de manutenção, Iterativamente durante o todo ciclo de vida de software, Lamentablemente en casi todas las etapas",Lamentablemente casi nunca hay especialistas de NFR y debo yo insistir en su importancia ,"Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Conduzir revisões de código focadas em RNFs",Abordar la importancia de los RNF desde el principio y comunicar a todos los involucrados para que las conozcan,No participé en desarrollos de código abierto,"Aclaro desde un comienzo del desarrollo que el tiempo invertido en RNF a la larga se recupera, y que voy a tomar medidas para implementar RNF necesariamente para realizar el desarrollo, caso contrario no acepto el proyecto.",,,
11,26/08/2023 17:57:00,Sim,32,Masculino,Bacharel,3,4,Alto,Desenvolvedor de software e técnico da TI,"Java, Python, Dart -> flutter ","Durante a fase inicial do desenvolvimento dos projetos, muito dos NFRs são facilmente reconhecidos, quando a empresa está dando a devida importância as perguntas da coleta e  análise de requisitos.","Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Quando se tentam implementar um novo NFR, depois da confirmação do projetor, além disso ser ser algo fora das boas práticas do desenvolvimento, pode causar uma falha ou atraso da entrega do projeto.","Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação.",Alto,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Comentários do código, Reuniões",Concordo,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento","Existia dentro da maioria. Esclarecer aos desenvolvedores, quais as tecnologias que seriam aplicadas ao projeto e/ou saber quais programadores estavam aptos para iniciar o projeto de imediato e quais precisavam passar por um período de aprendizado, sobre essas tecnologias.","Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Conduzir revisões de código focadas em RNFs","Durante o desenvolvimento, caso exista alguma dúvida sobre os NFRs, é procurando pela documentação pré estabelecida, caso não seja o suficiente, o ideal é pedir a cooperação de membros da equipe. Se mesmo assim não houver solução é agendado uma reunião entre as partes envolvidas. (Se chegar a parte da reunião, se prova uma falha na coleta e análise de requisitos)","Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais, Compreensão limitada das implicações técnicas dos RNFs","Geralmente fico responsável por deixar as NFRs, mais plausíveis, pelo tempo estabelecido e recursos computacionais. Muitos desenvolvedores no começo do projeto especulam NFRs, para inovação da ferramenta, que são muito fora da realidade para o pedido do cliente. Mas caso exista alguma forma de implementar tais recursos de forma que não atrapalhe o projeto, aceito tal sugestão e continuo a lidar com os próximos NFRs.",,,
12,26/08/2023 20:58:39,Sim,35,Feminino,Mestrado,17,15,Muito alto,CEO,"Python, JavaScript","Em todos os projetos que já trabalhei. Alguns deles no papel de consultora de Eng de Requisitos, em outros como product owner","Relevância para sua área de expertise, Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Muito alto,"Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Discussões em plataformas de versionamento (por exemplo, issues e pull requests), Reuniões, Confesso que não entendi muito bem essa pergunta. “As informações necessárias” para diagnóstico ou resolução?",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de implantação, Fase de manutenção, Iterativamente durante o todo ciclo de vida de software","Não, eram tratados por todos do time","Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Integrando a testagem de RNFs no pipeline de integração contínua","Na minha empresa não temos um processo definido que garanta que não vamos esquecer dos RNFs. No entanto, pela minha experiência e visão do quão importante eles são, sempre levanto discussão relacionada a eles na concepção e manutenção de todas as funcionalidades. Também incluímos alguns testes de desempenho e robustez no pipeline de IC (mas ainda fazemos isso menos do que eu gostaria)","Ferramentas ou frameworks insuficientes para testar e verificar aspectos não funcionais, Lidando com trade-offs entre diferentes requisitos não funcionais","Eu sempre reforço muito a importância dos RNFs e garanto que sejam tratados com a devida prioridade. No entanto, faço isso de forma tácita, sem metodologia formal de apoio",,,
13,27/08/2023 11:16:40,Sim,26,Masculino,Bacharel,6,2,Alto,Engenheiro de Software,"C#, PHP",Necessidade de reduzir o tempo de carregamento de uma página web que deveria disponibilizar dezenas de milhares de registros. Controle do consumo de memória de uma aplicação com milhões de registros armazenados em memória.,"Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Baixo,"Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Reuniões, Com outros colegas (mais experientes)",Concordo,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de manutenção",Não,"Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Conduzir revisões de código focadas em RNFs","Durante a concepção da solução de software, o time elenca os RNFs tipicamente baseando-se na experiência prévia ou em algum ponto específico levantado junto aos clientes. Durante a fase de revisão de código, os revisadores também avaliam pontos principalmente relacionados ao desempenho e escalabilidade do código desenvolvido.",Nunca participei de tais discussões.,Uma das sugestões mais úteis que já recebi foi a de realizar bechmarks para simular o comportamento de um trecho de código ou algoritmo sob diferentes condições. Isso permite revisar e/ou refatorar o código para que atende às especificações do projeto.,,,
14,27/08/2023 20:24:21,Sim,32,Masculino,Mestrado,8,8,Muito alto,Engenheiro de Software,"Java, Python, C, JavaScript",Requisitos referentes a escalabilidade e segurança de sistemas,"Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Potenciais riscos de NFRs não serem abordadas","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Reuniões",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de implantação, Fase de manutenção, Iterativamente durante o todo ciclo de vida de software","Sim, ficavam a cargo dos SREs (Site Reliability Engineering) e Engenheiros de software.","Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Empregar ferramentas ou frameworks específicos para avaliação de RNFs, Integrando a testagem de RNFs no pipeline de integração contínua","Todos os sistemas seguem um conjunto de normas desde a sua concepção para garantir a escalabilidade, segurança e disponibilidade.",Nenhum,"Sim, discussões sobre camadas de segurança com API gateways e limites de requisições.",,,
15,27/08/2023 21:50:47,Sim,53,Masculino,Especialização/MBA,20,50,Alto,Desenvolvedor de Software,"Java, C, C++, JavaScript","Trabalhando com linguagens associado a banco de dados , e trabalhando com banco de dados mais parrudos como Oracle e SQL Server , sempre tivemos em mente que precisamos manter o sistema funcionando para que não caia em descrédito, portando o banco de dados precisa ser redundante , para não parar no primeiro problema de disco ou de máquina ,.então quando cai qualquer componente por problema de hardware , sempre devemos ter um plano que irá mitigar os problemas e apresentar novas soluções para os clientes que estão acessando o sistema, deixando mais confiável , e menos suscetível a erros que podem ser minimizados .","Relevância para sua área de expertise, Impacto na qualidade do software que você usa, Oportunidade de aprendizado","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado.",Alto,"Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Discussões em plataformas de versionamento (por exemplo, issues e pull requests), Reuniões",Concordo,"Fase de desenvolvimento, Fase de implantação","Não haviam pessoas designadas, mas sempre eram trazidas preocupações com abordagem de confiabilidade, escalabilidade, e performance do sistema ,o que era bastante discutido nas reuniões.","Colaborar com outros membros da equipe para coletar insights, Integrando a testagem de RNFs no pipeline de integração contínua",Nas reuniões de.discussoes sobre confiabilidade e performance do sistema ,"Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Ferramentas ou frameworks insuficientes para testar e verificar aspectos não funcionais, Compreensão limitada das implicações técnicas dos RNFs","Com abordagem de ferramentas, discussões sobre confiabilidade, e performance do sistema.",,,
16,28/08/2023 13:11:45,Sim,61,Masculino,Especialização/MBA,3,04,Baixo,Analista de dados,Python,"Navegabilidade, Ajuda (Help), Design das telas","Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto","Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação.",Baixo,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Reuniões",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento",Não,"Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights",Buscar constante feedback dos clientes durante o desenvolvimento ,"Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais, Ambiguidade em definir e articular RNFs claramente","Sim.
Fazendo a apresentação das informações e dados de forma clara e objetiva.
Ficando na Usabilidade ",,,
17,28/08/2023 17:36:54,Sim,42,Masculino,Especialização/MBA,23,50,Muito alto,Engenharia de Dados,"Java, C#","Durante 15 anos, em soluções para a prefeitura de São Luís","Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Potenciais riscos de NFRs não serem abordadas","Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Muito alto,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Comentários do código, Discussões em plataformas de versionamento (por exemplo, issues e pull requests), Reuniões, Com outros colegas (mais experientes), E-mail",Discordo,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de implantação, Fase de manutenção",Não,"Colaborar com outros membros da equipe para coletar insights, Empregar ferramentas ou frameworks específicos para avaliação de RNFs, Integrando a testagem de RNFs no pipeline de integração contínua","Sempre ocorreu de maneira reativa, quando um RNF estava abaixo do aceitável. De maneira proativa, apenas quando RNF é uma exigência de um TdR, por exemplo. Nesse caso, muitas das vezes, se faz uso de ferramentas automatizadas para se garantir que o RNF está sendo atendido. Ex: uso do Sonar Qube para cobertura mínima de testes automatizados.","Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Ferramentas ou frameworks insuficientes para testar e verificar aspectos não funcionais, Ambiguidade em definir e articular RNFs claramente","A sugestão que eu recomendo é sempre manter os RNF visíveis e rastreáveis, de modo que o time tenha condições de incluí-los dentro do fluxo de desenvolvimento da solução. Quando isso não ocorre, facilmente eles são negligenciados.",,,
18,28/08/2023 20:18:55,Sim,24,Masculino,Ensino Médio,9,2,Baixo,Professor de Robótica,"Java, C++, JavaScript","Trabalhos acadêmicos, projetos com empresas e projetos particulares","Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Potenciais riscos de NFRs não serem abordadas","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Robustez: Capacidade do software de se recuperar em diversas condições., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Documentação de requisitos, Comentários do código, Reuniões",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de implantação, Fase de manutenção, Iterativamente durante o todo ciclo de vida de software",não,"Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Conduzir revisões de código focadas em RNFs, Integrando a testagem de RNFs no pipeline de integração contínua",revisões principais para garantir a coerência de todos os requisitos,"Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Lidando com trade-offs entre diferentes requisitos não funcionais",não,,,
19,29/08/2023 10:06:04,Sim,45,Masculino,Doutorado,7,5,Alto,Desenvolvedor de Software,"Java, Python, C, C++",Durante a fase de levantamentos dos requisitos de um projeto na área médica,Alinhamento com os objetivos do projeto,"Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Documentação de requisitos, Reuniões, Com outros colegas (mais experientes)",Concordo,Iterativamente durante o todo ciclo de vida de software,"Não, todos eramos envolvidos nos RNFs","Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Integrando a testagem de RNFs no pipeline de integração contínua",RNFs são validados e avaliados durante todo o tempo de vida do software.,"Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Ambiguidade em definir e articular RNFs claramente","Todos os RNFs forma discutidos em equipe, passo a passo antes de serem implementados e testados.",,,
20,29/08/2023 10:49:05,Sim,27,Masculino,Mestrado,1,5,Baixo,Desenvolvedor de Software,Python,"- Qual a melhor tecnologia para fazer alguns dos gráficos do sistema;
- Se deveria gerar um executável para Linux e outro para Windows;
- Se usaríamos um servidor localhost ou remoto.","Impacto na qualidade do software que você usa, Oportunidade de aprendizado","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Robustez: Capacidade do software de se recuperar em diversas condições., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Baixo,"Comentários do código, Reuniões, Com outros colegas (mais experientes)",Concordo,"Fase inicial (por exemplo, a fase de design), Iterativamente durante o todo ciclo de vida de software",Nunca identifiquei.,Colaborar com outros membros da equipe para coletar insights,Normalmente acontece quando encontramos algum problema.,"Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Compreensão limitada das implicações técnicas dos RNFs","Normalmente não é dito explicitamente que se trata de um RNF, mas costumamos discutir sobre as formas de deixar os sistemas melhores. Dessa forma, busco meios de identificar e abordar os RNFs.",,,
21,29/08/2023 12:07:45,Sim,54,Masculino,Mestrado,25,10,Muito alto,Engenheiro de Software,"Python, C, C#, C++","A major parte dos projetos em que participei foram na área de computação gráfica, então sempre projetei sua arquitetura e os desenvolvi procurando um desempenho alto de renderização.
Esses sistemas foram arquiteturados como componentes para puderem crescer de forma orgânica.","Relevância para sua área de expertise, Alinhamento com os objetivos do projeto, Potenciais riscos de NFRs não serem abordadas, Oportunidade de aprendizado","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Muito alto,"Reuniões, Com outros colegas (mais experientes)",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de implantação, Fase de manutenção, Iterativamente durante o todo ciclo de vida de software","Não haviam especialistas dedicados, os arquitetos e/ou desenvolvedores mais experientes se preocupavam com essas questões dentro de suas áreas de expertise.","Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Integrando a testagem de RNFs no pipeline de integração contínua",Desde o início dos projetos já penso nos RNFs para arquiteturar os sistemas. Ao longo dos sprints de desenvolvimento testo os RNFs e são feitas as refatorações necessárias.,"Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Ferramentas ou frameworks insuficientes para testar e verificar aspectos não funcionais, Lidando com trade-offs entre diferentes requisitos não funcionais, Compreensão limitada das implicações técnicas dos RNFs","Uma observação que recebi e guia meu trabalho é que para aumentar o tempo de vida útil de um sistema devemos considerar as seguintes coisas:
- O usuário tem que ter uma experiência agradável, então o desempenho, a segurança e a facilidade de uso são muito importantes.
- O usuário sempre vai precisar novas funcionalidades, então projete o sistema para que cresça de forma orgânica e estável.
- O sistema que você desenvolve não é teu, e esse código será manutenido por outros desenvolvedores, então crie-lo de forma que seja fácil de manutenir.",,,
22,29/08/2023 12:35:37,Sim,32,Masculino,Doutorado,3,4,Alto,Desenvolvedor de Software,"Python, JavaScript, R",Descrição do Projeto,Impacto na qualidade do software que você usa,"Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação.",Baixo,"Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Reuniões",Discordo,Fase de desenvolvimento,Não,Colaborar com outros membros da equipe para coletar insights,Durante o desenvolvimento,"Ferramentas ou frameworks insuficientes para testar e verificar aspectos não funcionais, Lidando com trade-offs entre diferentes requisitos não funcionais",Não,,,
23,29/08/2023 12:36:54,Sim,36,Masculino,Mestrado,12,20,Muito alto,Desenvolvedor de Software,"Python, C#, JavaScript","- Análise de relatório SAST e tratativas de vulnerabilidades.
- Análise de performance de consultas em bancos de dados.
- Discussões sobre arquitetura de software.","Relevância para sua área de expertise, Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Oportunidade de aprendizado","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Robustez: Capacidade do software de se recuperar em diversas condições., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Reuniões, Com outros colegas (mais experientes)",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Iterativamente durante o todo ciclo de vida de software",Não,"Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Conduzir revisões de código focadas em RNFs",Discussões sobre a arquitetura do software. Discussões com os colegas sobre problemas de performance.,Nenhum,"De acordo com a minha experiência percebo que os RNFs aparecem com mais frequência durante o processo de desenvolvimento de algum projeto. Nos projetos que participei, geralmente, as discussões relacionadas a RNFs partiram dos próprios desenvolvedores.",,,
24,29/08/2023 12:38:17,Sim,32,Masculino,Mestrado,9,30,Alto,Desenvolvedor de Software,"Python, JavaScript, Ruby","Proposição de arquitetura de sistemas, análise de relatórios de segurança, cobertura de testes automatizados e etc","Relevância para sua área de expertise, Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Potenciais riscos de NFRs não serem abordadas, Oportunidade de aprendizado","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Comentários do código, Discussões em plataformas de versionamento (por exemplo, issues e pull requests), Reuniões, Com outros colegas (mais experientes)",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de implantação","Não, toda equipe se envolve nos RNFs","Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Empregar ferramentas ou frameworks específicos para avaliação de RNFs, Integrando a testagem de RNFs no pipeline de integração contínua","No início do processo, uma arquitetura é definida, a qual é discutida e aprimorada pela equipe ao longo do desenvolvimento. Além disso, ferramentas são empregadas para analisar aspectos como segurança e qualidade do código.","Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais, Compreensão limitada das implicações técnicas dos RNFs","Sim, frequentemente recebemos feedback das equipes de infraestrutura, bem como os retornos automáticos das ferramentas de análise.",,,
25,29/08/2023 13:27:06,Sim,38,Masculino,Mestrado,19,20,Alto,Desenvolvedor de Software,"Python, C#, C++",Sempre me envolvo quando os nfrs sao relacionados a desempenho e usabilidade ,"Relevância para sua área de expertise, Potenciais riscos de NFRs não serem abordadas","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Usabilidade: Facilidade de uso e facilidade de interação.",Alto,"Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Comentários do código, Discussões em plataformas de versionamento (por exemplo, issues e pull requests), Reuniões, Com outros colegas (mais experientes)",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de implantação, Fase de manutenção, Iterativamente durante o todo ciclo de vida de software",Não ,"Colaborar com outros membros da equipe para coletar insights, Conduzir revisões de código focadas em RNFs","Reuniões e troca de mensagens, quando identificado um problema","Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Ferramentas ou frameworks insuficientes para testar e verificar aspectos não funcionais",Não ,,,
26,29/08/2023 14:39:10,Sim,68,Masculino,Mestrado,42,10,Alto,Desenvolvedor de Software,"Python, C, C++",Discussoes NFRs para o desenvolvimento do Sigeo - Sistema de Geologia e Geofisica,"Relevância para sua área de expertise, Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Oportunidade de aprendizado","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Comentários do código, Reuniões, Com outros colegas (mais experientes)",Concordo,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento",Não existiam especialistas. Os Requisitos eram discutidos pelos membros da equipe,"Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights",sempre ao inicio de novo desenvolvimento.,"Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais, Compreensão limitada das implicações técnicas dos RNFs",não recebemos sujestões,,,
27,30/08/2023 21:45:25,Sim,31,Masculino,Doutorado,12,8,Alto,Cientista de Dados,"Java, Python, C, C++","Eficiência do sistema entregue em produção onde reuniu vários colegas de time;
Escalabilidade na ingestão de dados para o data lake da nossa empresa;
Escalabilidade de recursos computacionais em um ambiente de edge computing;
Interoperabilidade entre portais públicos do governo.","Relevância para sua área de expertise, Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições.",Baixo,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Comentários do código, Discussões em plataformas de versionamento (por exemplo, issues e pull requests)",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de manutenção, Iterativamente durante o todo ciclo de vida de software","Não, no máximo em alguns projetos onde participei, existia o analista de requisitos, o qual este montava a especificação funcional (EF) e técnica (ET). Dependendo das necessidades do cliente, este anexava informações rasas sobre especificações não funcionais dentro das EFs e Ets.","Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights","Em geral, durante a construção do Backlog, nosso time faz a analise de requisitos não funcionais, baseado com o que já temos de requisitos funcionais.","Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais, Lidando com trade-offs entre diferentes requisitos não funcionais, Ambiguidade em definir e articular RNFs claramente","Sim. Em geral, utilizamos estratégias ou tecnologias já homologadas pelo mercado, onde os requisitos não funcionais destes satisfazem a complexidade do projeto. Um exemplo simples: Ao lidar com sistemas que consomem grandes volumes de dados, o ideal é que já exista uma infraestrutura robusta, que seja capaz de fazer ETL ou ELT de forma eficiente para que o sistema seja capaz de consumir esta dado de forma robusta, minimizando o custo computacional.",,,
28,31/08/2023 11:17:10,Sim,22,Masculino,Graduando em ciencia da computação,0,1,Baixo,Desenvolvedor de Software,"Java, Python",sobre formas de desenvolvimento de funções relativas a projetos específicos na facudade ,Impacto na qualidade do software que você usa,"Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições.",Baixo,Reuniões,Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento",Não haviam,"Colaborar com outros membros da equipe para coletar insights, Conduzir revisões de código focadas em RNFs","isso acontece normalmente ao desenvolvimento, onde nos deparamos com problemas em relação a esses requisitos","Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Ambiguidade em definir e articular RNFs claramente",O conselho foi dado na rigidez e no momento em que deveriam ser elencados,,,
29,01/09/2023 13:04:09,Sim,43,Masculino,Mestrado,20,20,Alto,Suporte e Análise de Dados,Java,"Dos casos que participei, me recordo de ter atuado na definição de aspectos da interface com o usuário (padrão de telas) e também relacionados com performance. Alguns projetos demandam disponibilidade muito alta (24/7) e isso precisa ser discutido com equipe de infraestrutura.","Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Potenciais riscos de NFRs não serem abordadas","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação.",Baixo,"Documentação de requisitos, Reuniões",Concordo,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento","Não, era responsabilidade do analista do sistema (tanto levantamento de requisitos não funcionais quanto de requisitos funcionais).","Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights",Nas reuniões iniciais de definição do escopo e requisitos do projeto.,Compreensão limitada das implicações técnicas dos RNFs,"Não me recordo de uma sugestão específica, mas sempre procurei contribuir nos requisitos funcionais relativos à performance e usabilidade.",,,
30,01/09/2023 20:28:11,Sim,25,Feminino,Bacharel,3,2,Baixo,Desenvolvedor de Software,"Python, JavaScript","Normalmente sou mais envolvida quando o requisito não funcional  é segurança, o ponto principal e descobrir qual é o nível de acesso mínimo que devemos utilizar em uma para que o usuário possa utilizar a aplicação sem colocar a segurança em risco","Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Potenciais riscos de NFRs não serem abordadas, Oportunidade de aprendizado","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado.",Baixo,"Usamos os servicos da aws, entao usamos a documentação da mesma para implementar os recursos para ajudar na manutebilidade, seguranca e desempenho",Concordo Fortemente,Iterativamente durante o todo ciclo de vida de software,"Não tinha um especialista, mas antes de entrar na empresa que realizei esse projeto, somos treinados a manter a conformidade, segurança, manutenabildade de todas as atividades realizadas dentro dela.",Revisar e refinar as definições de RNFs no início do processo de desenvolvimento,Normalmente  quando iniciamos um projeto novo estabelecemos o servico que vamos usar e como gostariamos que as restricoes de seguranca funcionem.,Nenhum,"Já recebi, estava criando aplicações para rodar em um serviço chamado aws lambda, meu companheiro de time sugeriu a criação de uma VPC(virtual private cloud) para rodar a aplicação com mais segurança ",,,
31,04/09/2023 14:39:59,Sim,34,Masculino,Bacharel,5,7,Alto,Gerência de Projeto,"Python, JavaScript","Trabalhando em sistema com requisitos de transmissão e exibição de informações em tempo real;
Trabalhando com sistemas onde havia necessidade de compatibilidade com multi plataformas e dispositivos.","Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Potenciais riscos de NFRs não serem abordadas, Oportunidade de aprendizado","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Reuniões, Com outros colegas (mais experientes)",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Fase de desenvolvimento, Fase de testes, Fase de implantação, Fase de manutenção, Iterativamente durante o todo ciclo de vida de software",Não haviam especialistas,"Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Realizando testes que visam validar o RNF definido",Realizando uma sólida difinição dos requisitos no inicio do projeto e fazendo um acompanhamento próximo do desenvolvimento dos requisitos que podem afetar diretamente os RNF definidos.,"Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais, Ferramentas ou frameworks insuficientes para testar e verificar aspectos não funcionais, Ambiguidade em definir e articular RNFs claramente, Compreensão limitada das implicações técnicas dos RNFs","Estar atento aos RNFs pode significar a diferença entre o sucesso ou fracasso de um projeto de software. Então a abordagem mais importante é jamais negligenciar os RNFs e dar eles toda atenção necessaria, assim como todo e qualquer requisito funcional implementado.",,,
32,08/09/2023 16:02:31,Sim,23,Masculino,Bacharel,2.8,3,Baixo,Desenvolvedor de Software,"Python, JavaScript","Em discussões relacionadas a usabilidade, desempenho e segurança para a entrega de uma aplicação de qualidade.","Impacto na qualidade do software que você usa, Oportunidade de aprendizado","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Muito baixo,"Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Reuniões, Com outros colegas (mais experientes)",Concordo Fortemente,"Fase de desenvolvimento, Fase de testes, Fase de manutenção",Não haviam.,"Colaborar com outros membros da equipe para coletar insights, Integrando a testagem de RNFs no pipeline de integração contínua","Durante o desenvolvimento de software é pensado em equipe o desempenho, usabilidade e segurança do software. Ao fazer deploy em um pipeline de integração contínua também é validada a segurança do código.","Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Ferramentas ou frameworks insuficientes para testar e verificar aspectos não funcionais, Lidando com trade-offs entre diferentes requisitos não funcionais, Compreensão limitada das implicações técnicas dos RNFs",Não.,,,
33,24/08/2023 11:02:45,Sim,33,Masculino,Doutorado,14,10,Alto,Engenheiro de Software,"Java, Python, Dart","Na maioria dos projetos em que participei, os NFRs mais discutidos foram em relação a desempenho e manutenibilidade. Em um dos primeiros projetos que trabalhei tivemos problemas de desempenho que resultaram em diversas discussões e tarefas. O problema era relacionado a modelagem ineficiente do banco de dados. 

No meu trabalho atual também temos discussões constantes sobre desempenho e escalabilidade. Com o aumento de clientes estamos constantemente realizando tarefas e reuniões de design para tornar um dos nossos projetos mais escalável e para melhorar seu desempenho. 

No meu trabalho atual também temos seções de modelagem para ameaças de segurança. Isso se tornou obrigatório devido aos altos riscos de ataques que projetos de software podem sofrer.

Por fim, recentemente trabalhei no design de um projeto novo. Pare isso fiz uma proposta inicial, em seguida discuti e melhorei o design junto com o time. O objeto era ter um design flexível para adição de novas funcionalidades.","Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Oportunidade de aprendizado","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou do tráfego de usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Documentação de requisitos, Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Comentários do código, Discussões em plataformas de versionamento (por exemplo, issues e pull requests), Reuniões, Com outros colegas (mais experientes)",Concordo Fortemente,"Fase inicial (por exemplo, a fase de design), Iterativamente durante o todo ciclo de vida de software","Dentro da empresa temos especialistas em certos NFRs, como aqueles relacionados a segurança e infraestrutura. Porém, eles não são exclusivos do nosso projeto. Ao invés disso, atuam em todos os projetos da empresa.","Revisar e refinar as definições de RNFs no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Conduzir revisões de código focadas em RNFs, Empregar ferramentas ou frameworks específicos para avaliação de RNFs, Integrando a testagem de RNFs no pipeline de integração contínua","Temos ferramentas focadas em qualidade que avaliam os artefatos do projeto periodicamente. Além disso, utilizamos o processo de Pull request, onde todas alterações são revisadas. Por fim, frequentemente realizamos seções de design relacionadas aos NFRs ","Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais, Lidando com trade-offs entre diferentes requisitos não funcionais",Para segurança temos um template para modelagem de ameaças de segurança. Para manutenibilidade temos documentação sobre boas práticas de design.,,,
34,24/08/2023 17:44:11,Sim,28,Feminino,Doutorado,8,8,Alto,Engenheiro de Software,Java,No meu trabalho atual tive que discutir sobre o não funcional ao projetar a arquitetura antes de começar a programar algo.,"Impacto na qualidade do software que você usa, Alinhamento com as metas do projeto, Riscos potenciais de NFRs não são abordados","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e evitar acessos não autorizados., Usabilidade: Facilidade de utilização e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Baixo,"Documentação de requisitos, comentários de código, discussões sobre plataformas de controle de versão (por exemplo, problemas e pull requests), reuniões, com outros colegas (mais experientes), e-mail",Concordo Fortemente,"Fase inicial (por exemplo, fase de design), fase de desenvolvimento, fase de teste, fase de implantação, fase de manutenção, iterativamente durante todo o ciclo de vida do software",Não,"Revisar e refinar as definições de NFR no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Conduzir revisões de código focadas em NFRs, Empregar ferramentas ou estruturas específicas para avaliação de NFR, Integrar testes de NFR no pipeline de integração contínua",Acontece quando um cliente exige algo. O dono do produto coleta o produto desejado do cliente e junto com a equipe desenhamos os requisitos e a arquitetura e então os desenvolvedores iniciam a programação.,"Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais, Ambiguidade na definição e articulação clara das NFRs, Compreensão limitada das implicações técnicas das NFRs","Não, sou novo na indústria e anteriormente na academia não precisava fazer isso formalmente com uma equipe. Normalmente, os projetos que fiz na academia eram discutidos entre mim e meu orientador, e decidimos juntos pelo NFR ou sozinho. Atualmente, no meu trabalho discuto as NFRs com minha equipe e tentamos documentá-las de alguma forma. Meus colegas são mais experientes que eu, então apenas ouço e aprendo com eles, às vezes dou pequenas sugestões, mas na maioria das vezes eles sabem como cuidar dos NFRs.",,,
35,24/08/2023 18:26:13,Sim,33,Masculino,Mestrado,13,9,Muito Alto,Engenheiro de Software,"Java, JavaScript, Ruby, PHP","Ao projetar a interface do usuário para uma página de pagamento, designers e desenvolvedores discutiram NFRs relacionados à usabilidade e acessibilidade. Consideramos fatores que melhoram a experiência do usuário, como capacidade de resposta e facilidade de navegação.","Impact on software quality that you use, Alignment with project goals","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou tráfego de usuários., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e evitar acesso não autorizado., Usabilidade: Usuário -simpatia e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Documentação de requisitos, plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), reuniões, com outros colegas (mais experientes)",Concordo Fortemente,Iterativamente durante todo o ciclo de vida do software,Não,"Revisar e refinar as definições de NFR no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Conduzir revisões de código focadas em NFRs","Normalmente discutiríamos tudo na fase de coleta de requisitos, mas algumas coisas podem ser perdidas e podemos identificá-las/apontá-las também durante a fase de revisão ou teste.",Falta de documentação clara para requisitos não funcionais no sistema de código aberto; Ferramentas ou estruturas insuficientes para testar e verificar aspectos não funcionais,"Sim, em relação ao desempenho. Por exemplo, a maneira como eu estava extraindo alguns registros do banco de dados.",,,
36,27/08/2023 11:13:47,Sim,31,Masculino,Mestrado,13,9,Muito Alto,Arquiteto de Software,Java,"Durante o desenvolvimento de softwares baseados na Web, estive envolvido em discussões relacionadas a Autenticação, Autorização, Segurança e Implantabilidade.

Agora, trabalhando com APIs altamente escaláveis, estou mais aprofundado em SLDC, desempenho, escalabilidade, segurança de dados, LGPD e outros requisitos NF.

Também sou responsável por uma equipe de Plataforma, focada em Arquitetura e nossos principais KPIs são o Nível de Maturidade DevOps, 4 Key Metrics, etc.","Relevância para sua área de especialização, Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Riscos potenciais de NFRs não são abordados, Oportunidade de aprendizagem","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software., Uso justo de dados pessoais (LGPD, GDPR)",Muito Alto,"Documentação de requisitos, plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), discussões sobre plataformas de controle de versão (por exemplo, problemas e pull requests), reuniões, com outros colegas (mais experientes), e-mail, documentos de especificação NFR e Planilhas",Concordo Fortemente,"Fase inicial (por exemplo, fase de design), fase de desenvolvimento, fase de teste, fase de implantação, fase de manutenção, iterativamente durante todo o ciclo de vida do software","Normalmente os Gerentes de Arquitetura lidam com o Mapa de Calor e a visão geral da maturidade do NFR em grandes projetos. Os arquitetos de software lidam com planilhas NFR para recursos específicos do projeto. E também temos especialistas em Dados, Segurança, Proteção e Regulamentação de Dados do Usuário, DevOps, todos desempenhando funções consultivas para os Arquitetos de Software.","Revisar e refinar as definições de NFR no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Conduzir revisões de código focadas em NFRs, Empregar ferramentas ou estruturas específicas para avaliação de NFR, Integrar testes de NFR no pipeline de integração contínua","Cada projeto possui uma planilha NFR que é preenchida por um arquiteto e a solução revisada pela equipe.

Os incidentes podem ter seu post mortem mapeado para ações relacionadas ao NFR.

Temos análises de Nível de Maturidade baseadas periodicamente com todos os arquitetos e PDCAs onde discutimos e avaliamos NFRs.

Além de revisões de código e testes executados para quase todos os commits, entregas (Segurança (Pentest), CI (SAST/DAST), Desempenho (Carga/Estresse), Observabilidade, Layout, Etc).",Falta de documentação clara para requisitos não funcionais no sistema de código aberto,"Como atuo como arquiteto, atendo periodicamente em PDCAs sobre NFRs bem como em Solution Reviews e diariamente soluciono dúvidas dos desenvolvedores relacionadas a este tema.",,,
37,28/08/2023 15:03:14,Sim,47,Masculino,Doutorado,30,50,Muito Alto,Desenvolvedor de Software,"Java, Python, JavaScript, Golang","Frequentemente escolhendo tecnologias, revisando código e resolvendo problemas de desempenho.","Relevância para sua área de especialização, Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou tráfego de usuários., Segurança: Medidas para proteger os dados e evitar acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação., Capacidade de manutenção: Facilidade de fazer atualizações e alterações no software.",Alto,"Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), Reuniões",Concordo Fortemente,"Fase de desenvolvimento, fase de teste, fase de implantação, fase de manutenção",Não,"Conduzindo revisões de código com foco em NFRs, Empregando ferramentas ou estruturas específicas para avaliação de NFRs",Acontece procurando erros no código que possam causar problemas de NFR e utilizando ferramentas como testes de penetração para verificar a segurança do código ou ferramentas de teste de desempenho que testam a escalabilidade em termos de número de usuários.,"Ferramentas ou estruturas insuficientes para testar e verificar aspectos não funcionais, Lidar com trade-offs entre diferentes requisitos não funcionais, Ambiguidade na definição e articulação clara das NFRs, Compreensão limitada das implicações técnicas das NFRs","Recebi e dei sugestões de pares relacionados à complexidade de tempo, à arquitetura de software (multithreaded, balanceamento de carga e outros)",,,
38,29/08/2023 07:23:51,Sim,35,Masculino,Mestrado,10,8,Alto,Engenheiro de Software,"Java, Python","Tenho discussões sobre NFRs mais relacionadas à área de dados. Temos algumas restrições relacionadas ao tempo e aos custos para processar big data na nuvem. Por isso, precisamos fornecer soluções escaláveis horizontalmente para atingir os NFRs.

Recentemente, também discutimos sobre a segurança na implantação da nuvem. Estamos migrando um sistema para uma nuvem e protegendo os endpoints com autorização e autor.","Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto","Desempenho: Velocidade, capacidade de resposta e eficiência do software. Escalabilidade: Capacidade de lidar com aumento de carga de trabalho ou tráfego de usuários.",Muito Baixo,"Plataformas de chat com a equipe (ex. Teams, Slack, Discord), Reuniões, Com outros colegas (mais experientes), E-mail",Concordo Fortemente,Iterativamente durante todo o ciclo de vida do software,"No meu projeto atual, temos um sistema intensivo de dados, os NFRs estão mais relacionados ao desempenho de entrega de dados de forma mais rápida aos usuários. Por isso, contamos com Engenheiros de Dados dedicados a realizá-lo.","Colaborar com outros membros da equipe para coletar insights, Empregar ferramentas ou estruturas específicas para avaliação de NFR",Não há um processo de NFR definido ou requisitos bem definidos; essas discussões e estratégias aparecem à medida que ocorrem problemas de NFR nos projetos.,"Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais, Lidando com trade-offs entre diferentes requisitos não funcionais, Ambiguidade na definição e articulação clara de NFRs","Não, eu não fiz.",,,
39,05/09/2023 14:18:57,Sim,38,Masculino,Doutorado,11,30,Muito Alto,Engenheiro de Software,"Java, Python, C++, JavaScript",Normalmente discuto NFR durante a fase de design,"Relevância para sua área de especialização, Impacto na qualidade do software que você usa, Alinhamento com as metas do projeto, Riscos potenciais de NFRs não são abordados","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e evitar acessos não autorizados., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Muito Alto,Documentação de requisitos,Concordo Fortemente,"Fase inicial (por exemplo, fase de design), fase de teste, fase de manutenção","Não é um especialista. Normalmente, o engenheiro responsável pela tarefa de design é responsável por elicitar e especificar o NFR. Esses requisitos são discutidos posteriormente durante a revisão do projeto, antes de qualquer implementação ser feita","Revisar e refinar as definições de NFR no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Empregar ferramentas ou estruturas específicas para avaliação de NFR, Integrar testes de NFR no pipeline de integração contínua",Listamos e discutimos o NFR durante as sessões de design,"Nenhum, não trabalho próximo com código-fonte aberto, então essas questões podem não ser aplicáveis a mim","Sim, durante as sessões de design discutimos em grupo o que são as NFR e como atendê-las. Discutimos mecanismos que podem ser usados para monitorar e agir rapidamente caso não cumpramos a NFR",,,
40,06/09/2023 05:24:31,Sim,28,Masculino,Doutorado,5,3,Alto,Engenheiro de Software,"Java, JavaScript","Reuniões de equipe, reuniões de levantamento de requisitos","Impacto na qualidade do software que você usa, Alinhamento com as metas do projeto, Riscos potenciais de NFRs não são abordados","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou tráfego de usuários., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e evitar acesso não autorizado., Usabilidade: Usuário -simpatia e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Documentação de requisitos, plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), comentários de código, discussões em plataformas de controle de versão (por exemplo, problemas e pull requests), reuniões",Concordo,"Fase de desenvolvimento, fase de teste, fase de implantação, fase de manutenção, iterativamente durante todo o ciclo de vida do software",Não,"Colaborar com outros membros da equipe para coletar insights, Empregar ferramentas ou estruturas específicas para avaliação de NFR, Integrar testes de NFR no pipeline de integração contínua","Geralmente acontece conforme descrito acima, principalmente durante a colaboração com membros da equipe. Quanto a quando, geralmente quando o NFR tem um impacto negativo no sistema. Esse feedback geralmente é obtido conversando com nossos clientes.","Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Lidar com compensações entre diferentes requisitos não funcionais, Ambiguidade na definição e articulação clara de NFRs","Nada formal, geralmente reuniões com colegas que sugerem algumas boas práticas ou estratégias.",,,
41,26/08/2023 19:04:19,Yes,39,Masculino,Bacharel,23,10,Muito Alto,Arquiteto de Software,"Java, Groovy",Questão muito ampla,"Relevância para sua área de especialização, Impacto na qualidade do software que você usa, Alinhamento com as metas do projeto, Riscos potenciais de NFRs não são abordados","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e evitar acessos não autorizados., Usabilidade: Facilidade de utilização e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), comentários de código, discussões em plataformas de controle de versão (por exemplo, problemas e pull requests), reuniões",Concordo Fortemente,"Early phase (e.g., design phase), Development phase, Testing phase, Deployment phase, Maintenance phase, Iteratively during the software's whole life cycle","normalmente não, exceto para auditores de segurança","Revisar e refinar as definições de NFR no início do processo de desenvolvimento, Conduzir revisões de código com foco em NFRs",n/a,"Lidar com trade-offs entre diferentes requisitos não funcionais, Ambiguidade na definição e articulação clara das NFRs",Muito ampla,Muito ampla,Muito ampla,Muito ampla
42,26/08/2023 19:31:52,Sim,35,Masculino,Bacharel,9,12,Alto,Engenheiro de Software,"Java, C#","Estive envolvido em discussões sobre NFRs em todos os projetos em que trabalhei. Atualmente como Engenheiro de Software Sênior, isso é algo que faço diariamente.",Impacto na qualidade do software que você usa. Os riscos potenciais de NFRs não são abordados,"Desempenho: Velocidade, capacidade de resposta e eficiência do software., Usabilidade: Facilidade de uso e facilidade de interação., Capacidade de manutenção: Facilidade de fazer atualizações e alterações no software.",Alto,"Plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), comentários de código, reuniões",Concordo,Iterativamente durante todo o ciclo de vida do software,Não. Eles eram engenheiros comuns.,Colaborar com outros membros da equipe para coletar insights,"Geralmente acontece durante a fase de desenvolvimento e durante a fase de teste. Em uma equipe pequena, o desenvolvedor, o responsável pelo controle de qualidade e o gerente geralmente discutirão as NFRs e, se houver tempo disponível, tentarão resolvê-las.","Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais, Ferramentas ou estruturas insuficientes para testar e verificar aspectos não funcionais, Lidar com trade-offs entre diferentes requisitos não funcionais, Ambiguidade na definição e articulação clara das NFRs","Sim, recebi/dei sugestões úteis. Minha abordagem para lidar com NFRs é apenas pensar nos riscos que a implementação atual do software apresenta e tentar melhorá-la. Por exemplo, refatorando continuamente o código na primeira chance que tenho. Tento ensinar os outros a fazerem o mesmo.",A motivação deve ser um sistema que funcione o mais próximo possível da perfeição.,Um projeto monolítico que usava toda a RAM disponível (e travava) toda vez que muitos usuários tentavam usar a mesma funcionalidade. Isso foi resolvido escalonando o serviço para vários núcleos/vms,Não
43,29/08/2023 00:21:37,Sim,31,Masculino,Bacharel,5,6,Alto,Engenheiro de Software,"Java, JavaScript","Envolvido em discussões sobre segurança, backup, escalabilidade etc.","Relevância para sua área de especialização, Impacto na qualidade do software que você usa, Alinhamento com os objetivos do projeto, Oportunidade de aprendizagem","Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e evitar acessos não autorizados., Usabilidade: Facilidade de utilização e facilidade de interação., Manutenibilidade: Facilidade de fazer atualizações e alterações no software.",Alto,"Discussões sobre plataformas de controle de versão (por exemplo, problemas e pull requests), Reuniões, Com outros colegas (mais experientes)",Concordo Fortemente,Iterativamente durante todo o ciclo de vida do software,Não. Todos os membros da equipe eram responsáveis,"Colaborar com outros membros da equipe para coletar insights, Conduzir revisões de código com foco em NFRs",Possíveis questões são discutidas e implementações são propostas para mitigar as questões.,"Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Compreensão limitada das implicações técnicas das NFRs",Sim. Problemas de desempenho ficaram evidentes em um dos meus recursos. Foi-me sugerido fazer uso de cache e isso melhorou consideravelmente o desempenho.,Satisfação do cliente,"A disponibilidade do produto era ignorada na minha empresa anterior e o aplicativo caía inesperadamente, causando possível perda de receita para o cliente.",A indústria tem estabelecido bons indicadores sobre NFRs e as pessoas devem investir recursos nas melhores práticas
44,05/09/2023 13:25:21,Sim,56,Masculino,Bacharel,35,100,Muito Alto,Todos eles...,"Java, Python, C, C++, JavaScript",Desenvolvimento de produtos; desenvolvimento/reengenharia de operações,Impacto na qualidade do software que você usa. Os riscos potenciais de NFRs não são abordados,"Desempenho: Velocidade, capacidade de resposta e eficiência do software., Escalabilidade: Capacidade de lidar com o aumento da carga de trabalho ou tráfego de usuários., Robustez: Capacidade do software de se recuperar em diversas condições., Disponibilidade: Tempo de atividade do sistema e acessibilidade para os usuários., Segurança: Medidas para proteger os dados e impedir o acesso não autorizado., Usabilidade: Facilidade de uso e facilidade de interação., Capacidade de manutenção: Facilidade de fazer atualizações e alterações no software., Capacidade de entrega: dentro do prazo, dentro do orçamento",Muito Alto,"Documentação de requisitos, plataformas de bate-papo com a equipe (por exemplo, Teams, Slack, Discord), discussões em plataformas de controle de versão (por exemplo, problemas e pull requests), reuniões, e-mail",Concordo Fortemente,"Fase inicial (por exemplo, fase de design), fase de desenvolvimento, fase de teste, fase de implantação, fase de manutenção, iterativamente durante todo o ciclo de vida do software, conceituação, ou seja, pré-projeto","Não; nenhum ""especialista"" em NFR","Revisar e refinar as definições de NFR no início do processo de desenvolvimento, Colaborar com outros membros da equipe para coletar insights, Conduzir revisões de código focadas em NFRs, Empregar ferramentas ou estruturas específicas para avaliação de NFR, Integrar testes de NFR no pipeline de integração contínua",As NFRs são continuamente avaliadas e abordadas através do SDLC,"Falta de documentação clara para requisitos não funcionais no sistema de código aberto, Comunicação inadequada entre os membros da equipe sobre requisitos não funcionais, Lidando com trade-offs entre diferentes requisitos não funcionais, Ambiguidade na definição e articulação clara de NFRs","Issues de VC, discussões, e-mails – praticamente todas as modalidades de comunicação. Cada um normalmente é capturado como um problema e gerenciado de forma semelhante aos recursos e bugs.",Melhore o software e a experiência do cliente com o software,"Para uma versão inicial do nosso software, a carga de processamento de eventos foi subestimada. Depois de implantado, o software teve um desempenho ruim sob uso intenso, desencadeando uma experiência do usuário ruim. Acabamos redesenhando o núcleo do produto para abordar o desempenho e a escalabilidade – demorou vários meses, mas valeu a pena o esforço.","É fácil desenvolver software funcional, mas muitas vezes difícil cumprir as NFRs devido à falta de conhecimento do software e das NFRs e à comunicação inadequada."